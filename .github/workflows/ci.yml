name: "CI"

on:
  pull_request:
    types: [ 'opened', 'reopened', 'synchronize', 'ready_for_review' ]

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true

concurrency:
  group: '${{ github.head_ref || github.ref }}-${{ github.workflow }}'
  cancel-in-progress: true

permissions: write-all

jobs:
  get-changed-files:
    name: "Get changed files"
    runs-on: [ 'alune-sh' ]
    if: ${{ github.event.pull_request.draft == false }}
    outputs:
      web_any_changed: ${{ steps.changed-files-yaml.outputs.web_any_changed }}
      web_all_changed_files: ${{ steps.changed-files-yaml.outputs.web_all_changed_files }}
      backend_any_changed: ${{ steps.changed-files-yaml.outputs.backend_any_changed }}
      backend_all_changed_files: ${{ steps.changed-files-yaml.outputs.backend_all_changed_files }}
    steps:
      - name: "Checkout Repo"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: "Get changed-files"
        id: changed-files-yaml
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          files_yaml: |
            web:
                - Prokast.Klient/**
                - Prokast.Magazyn/**
            backend:
                - Prokast.Server/**
      - name: "Print results"
        run: echo "Web any changed = [${{ steps.changed-files-yaml.outputs.web_any_changed }}]"; echo "Backend any changed = [${{ steps.changed-files-yaml.outputs.backend_any_changed }}]"

  frontend:
    runs-on: [ 'alune-sh' ]
    needs:
      - get-changed-files
    if: ${{ needs.get-changed-files.outputs.web_any_changed == 'true' }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - run: echo "Uncomment when project exists lol"
      - name: "Checkout Repo"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: "Setup Node 20.x"
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: 22.17.1
      - name: "Install dependencies"
        run: npm install
      - name: "Lint"
        run: npm run lint
      - name: "Build"
        run: npm run build

  backend:
    runs-on: [ 'alune-sh' ]
    needs:
      - get-changed-files
    if: ${{ needs.get-changed-files.outputs.backend_any_changed == 'true' }}
    timeout-minutes: 10
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: "Setup .NET"
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          dotnet-version: 9.0.303
      - name: "Restore dependencies"
        run: dotnet restore
      - name: "Build"
        run: dotnet build --no-restore --configuration Release -v m

  report-job-output:
    name: "Report workflow results"
    runs-on: [ 'alune-sh' ]
    needs:
      - get-changed-files
      - frontend
      - backend
    if: ${{ github.event.pull_request.draft == false && !cancelled() }}
    env:
      GET_CHANGED_FILES_RESULT: ${{ needs.get-changed-files.result }}
      CI_FRONTEND_RESULT: ${{ needs.frontend.result }}
      CI_BACKEND_RESULT: ${{ needs.backend.result }}
    steps:
      - name: "Check if any job failed"
        run: |
          if [ "$GET_CHANGED_FILES_RESULT" == "failure" ]; then
            exit 1
          elif [ "$CI_FRONTEND_RESULT" == "failure" ]; then
            exit 1
          elif [ "$CI_BACKEND_RESULT" == "failure" ]; then
            exit 1
          fi
          exit 0
